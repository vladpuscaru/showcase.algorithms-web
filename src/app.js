import express from "express";
import cors from "cors";

import { router as pathfindingRouter } from "./routes/algorithms/pathfinding";

const app = express();

const PORT = 8080;

app.use(express.json());
app.use(cors());

app.use('/algorithms/pathfinding/', pathfindingRouter);

app.get("/test", (req, res) => {
    const x = '0000000000000000000000000000000000000000000000000000000000000000\n' +
        '1111111111110111111101111111111111110111011111110111111111110111\n' +
        '1111111111110111111101111111111111110111011111110111111111110111\n' +
        '1111111111110111111101111111111111110111011111110111111111110111\n' +
        '0111000001110000011100000000000001110111011101110111000001110111\n' +
        '0111111101111111111101111111111111110111111101111111011111110111\n' +
        '0111111101111111111101111111111111110111111101111111011111110111\n' +
        '0111111101111111111101111111111111110111111101111111011111110111\n' +
        '0000011100000000000001110111000000000111000000000000011100000111\n' +
        '0111111101110111111101110111011111110111011111110111011101111111\n' +
        '0111111101110111111101110111011111110111011111110111011101111111\n' +
        '0111111101110111111101110111011111110111011111110111011101111111\n' +
        '0111000001110111011101110111011101110111011101110111011101110000\n' +
        '0111111101111111011111110111111101110111011101111111011111110111\n' +
        '0111111101111111011111110111111101110111011101111111011111110111\n' +
        '0111111101111111011111110111111101110111011101111111011111110111\n' +
        '0000011100000000000000000000000001110111011100000000000000000111\n' +
        '0111111101111111011101111111111101110111011111111111111101111111\n' +
        '0111111101111111011101111111111101110111011111111111111101111111\n' +
        '0111111101111111011101111111111101110111011111111111111101111111\n' +
        '0111000001110111011101110000011101110111000000000000011101110000\n' +
        '0111111101110111011111110111111111110111111111110111011101111111\n' +
        '0111111101110111011111110111111111110111111111110111011101111111\n' +
        '0111111101110111011111110111111111110111111111110111011101111111\n' +
        '0000011101110111000000000111011100000000000001110111011101110111\n' +
        '0111011111110111011111111111011101111111111111110111011101110111\n' +
        '0111011111110111011111111111011101111111111111110111011101110111\n' +
        '0111011111110111011111111111011101111111111111110111011101110111\n' +
        '0111000000000111011100000000011101110000000000000111011101110000\n' +
        '0111111111110111111101110111111111110111111111110111011101111111\n' +
        '0111111111110111111101110111111111110111111111110111011101111111\n' +
        '0111111111110111111101110111111111110111111111110111011101111111\n' +
        '0111000001110000000001110111000000000000000001110111011100000111\n' +
        '0111111101111111111111110111011111111111111101110111111111111111\n' +
        '0111111101111111111111110111011111111111111101110111111111111111\n' +
        '0111111101111111111111110111011111111111111101110111111111111111\n' +
        '0000011100000000000001110111011100000000011101110000011101110000\n' +
        '0111111101111111111111111111011111111111011111111111011101111111\n' +
        '0111111101111111111111111111011111111111011111111111011101111111\n' +
        '0111111101111111111111111111011111111111011111111111011101111111\n' +
        '0111000000000000000000000000000001110000000001110111011100000111\n' +
        '0111011111110111111111110111111101111111011101110111111101111111\n' +
        '0111011111110111111111110111111101111111011101110111111101111111\n' +
        '0111011111110111111111110111111101111111011101110111111101111111\n' +
        '0111011101110111000001110111000000000111011101110000000000000111\n' +
        '0111111101111111011111110111111101110111111101111111011111110111\n' +
        '0111111101111111011111110111111101110111111101111111011111110111\n' +
        '0111111101111111011111110111111101110111111101111111011111110111\n' +
        '0000000000000000011100000000011101110000000000000111000001110000\n' +
        '0111111101111111111101111111011111110111111101110111111111111111\n' +
        '0111111101111111111101111111011111110111111101110111111111111111\n' +
        '0111111101111111111101111111011111110111111101110111111111111111\n' +
        '0111011101110000000001110111000001110111011101110000000001110111\n' +
        '0111011111110111111111110111111101111111011111111111011111110111\n' +
        '0111011111110111111111110111111101111111011111111111011111110111\n' +
        '0111011111110111111111110111111101111111011111111111011111110111\n' +
        '0111011100000111000000000000011100000111000001110000011100000000\n' +
        '0111011111110111011111111111111101111111011101111111111101111111\n' +
        '0111011111110111011111111111111101111111011101111111111101111111\n' +
        '0111011111110111011111111111111101111111011101111111111101111111\n' +
        '0111000000000111011100000000000001110000011100000111000001110111\n' +
        '0111111111111111011111111111111111111111011111111111111111110111\n' +
        '0111111111111111011111111111111111111111011111111111111111110111\n' +
        '0111111111111111011111111111111111111111011111111111111111110111';

    const matrix = [];
    const rows = x.split("\n");
    for (let i = 0; i < rows.length; i++) {
        matrix.push([]);
        const cols = rows[i].split("");
        for (let j = 0; j < cols.length; j++) {
            matrix[i].push(Number.parseInt(cols[j]));
        }
    }
    res.json(matrix);
});

app.listen(PORT, () => {
    console.log(`Backend listening on port ${PORT}`);
})

